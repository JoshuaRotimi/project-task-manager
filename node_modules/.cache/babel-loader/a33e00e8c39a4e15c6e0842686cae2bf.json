{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaolorunnipa/Downloads/React Guide/firestore-react-crud-app-main/src/components/Dashboard/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { collection, getDocs, deleteDoc, doc, addDoc } from \"firebase/firestore\";\nimport Header from \"./Header\";\nimport Table from \"./Table\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\nimport { db } from \"../../config/firestore\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newProject, setNewProject] = useState(\"\");\n  const getTasks = async () => {\n    const querySnapshot = await getDocs(collection(db, \"tasks\"));\n    const allTasks = querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    setTasks(allTasks);\n  };\n  useEffect(() => {\n    getTasks();\n  }, []);\n  const handleEdit = id => {\n    const [task] = tasks.filter(task => task.id === id);\n    setSelectedTask(task);\n    setIsEditing(true);\n  };\n  const handleDelete = id => {\n    Swal.fire({\n      icon: \"warning\",\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, cancel!\"\n    }).then(result => {\n      if (result.value) {\n        // TODO delete document\n        try {\n          deleteDoc(doc(db, \"tasks\", id));\n        } catch (e) {\n          console.log(\"Unable to delete task.\");\n        }\n        Swal.fire({\n          icon: \"success\",\n          title: \"Deleted!\",\n          text: `Task has been deleted.`,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        const tasksCopy = tasks.filter(task => task.id !== id);\n        setTasks(tasksCopy);\n      }\n    });\n  };\n  const addProject = async e => {\n    e.preventDefault();\n    if (!newProject) {\n      return Swal.fire({\n        icon: \"error\",\n        title: \"Error!\",\n        text: \"Add a valid Project name.\",\n        showConfirmButton: true\n      });\n    }\n    try {\n      await addDoc(collection(db, \"projects\"), {\n        projects: newProject\n      });\n    } catch (e) {\n      console.log(\"Failed to add New Project\");\n    }\n    Swal.fire({\n      icon: \"success\",\n      title: \"Added!\",\n      text: `New Project Created!`,\n      showConfirmButton: false,\n      timer: 1500\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isAdding && !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setIsAdding: setIsAdding,\n        setIsAuthenticated: setIsAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        tasks: tasks,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"newProject\",\n          children: \"Add New Project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"newProject\",\n          type: \"text\",\n          name: \"newProject\",\n          placeholder: \"New Project Name\",\n          value: newProject,\n          onChange: e => setNewProject(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          value: \"Add Project\",\n          onSubmit: e => addProject(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isAdding && /*#__PURE__*/_jsxDEV(Add, {\n      setIsAdding: setIsAdding,\n      getTasks: getTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 20\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Edit, {\n      selectedTask: selectedTask,\n      setIsEditing: setIsEditing,\n      getTasks: getTasks\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"LT9N9mT4KwivUhpPrYzDald1FUM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Swal","collection","getDocs","deleteDoc","doc","addDoc","Header","Table","Add","Edit","db","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","setIsAuthenticated","_s","tasks","setTasks","selectedTask","setSelectedTask","isAdding","setIsAdding","isEditing","setIsEditing","newProject","setNewProject","getTasks","querySnapshot","allTasks","docs","map","id","data","handleEdit","task","filter","handleDelete","fire","icon","title","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","e","console","log","showConfirmButton","timer","tasksCopy","addProject","preventDefault","projects","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","name","placeholder","onChange","target","onSubmit","_c","$RefreshReg$"],"sources":["/Users/joshuaolorunnipa/Downloads/React Guide/firestore-react-crud-app-main/src/components/Dashboard/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport {\n  collection,\n  getDocs,\n  deleteDoc,\n  doc,\n  addDoc,\n} from \"firebase/firestore\";\n\nimport Header from \"./Header\";\nimport Table from \"./Table\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\n\nimport { db } from \"../../config/firestore\";\n\nconst Dashboard = ({ setIsAuthenticated }) => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const [newProject, setNewProject] = useState(\"\");\n\n  const getTasks = async () => {\n    const querySnapshot = await getDocs(collection(db, \"tasks\"));\n    const allTasks = querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    setTasks(allTasks);\n  };\n\n  useEffect(() => {\n    getTasks();\n  }, []);\n\n  const handleEdit = (id) => {\n    const [task] = tasks.filter((task) => task.id === id);\n\n    setSelectedTask(task);\n    setIsEditing(true);\n  };\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      icon: \"warning\",\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, cancel!\",\n    }).then((result) => {\n      if (result.value) {\n        // TODO delete document\n        try {\n          deleteDoc(doc(db, \"tasks\", id));\n        } catch (e) {\n          console.log(\"Unable to delete task.\");\n        }\n\n        Swal.fire({\n          icon: \"success\",\n          title: \"Deleted!\",\n          text: `Task has been deleted.`,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n\n        const tasksCopy = tasks.filter((task) => task.id !== id);\n        setTasks(tasksCopy);\n      }\n    });\n  };\n\n  const addProject = async (e) => {\n    e.preventDefault();\n\n    if (!newProject) {\n      return Swal.fire({\n        icon: \"error\",\n        title: \"Error!\",\n        text: \"Add a valid Project name.\",\n        showConfirmButton: true,\n      });\n    }\n\n    try {\n      await addDoc(collection(db, \"projects\"), { projects: newProject });\n    } catch (e) {\n      console.log(\"Failed to add New Project\");\n    }\n\n    Swal.fire({\n      icon: \"success\",\n      title: \"Added!\",\n      text: `New Project Created!`,\n      showConfirmButton: false,\n      timer: 1500,\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      {!isAdding && !isEditing && (\n        <>\n          <Header\n            setIsAdding={setIsAdding}\n            setIsAuthenticated={setIsAuthenticated}\n          />\n          <Table\n            tasks={tasks}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n          <div>\n            <label htmlFor=\"newProject\">Add New Project</label>\n            <input\n              id=\"newProject\"\n              type=\"text\"\n              name=\"newProject\"\n              placeholder={\"New Project Name\"}\n              value={newProject}\n              onChange={(e) => setNewProject(e.target.value)}\n            />\n            <input\n              type=\"submit\"\n              value=\"Add Project\"\n              onSubmit={(e) => addProject(e)}\n            />\n          </div>\n        </>\n      )}\n      {isAdding && <Add setIsAdding={setIsAdding} getTasks={getTasks} />}\n      {isEditing && (\n        <Edit\n          selectedTask={selectedTask}\n          setIsEditing={setIsEditing}\n          getTasks={getTasks}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}