{"ast":null,"code":"var _jsxFileName = \"/Users/joshuaolorunnipa/Downloads/React Guide/firestore-react-crud-app-main/src/components/Dashboard/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { collection, getDocs } from \"firebase/firestore\";\nimport Header from \"./Header\";\nimport Table from \"./Table\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\nimport { employeesData } from \"../../data\";\nimport { db } from \"../../config/firestore\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  setIsAuthenticated\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n  const getTasks = async () => {\n    const querySnapshot = await getDocs(collection(db, \"tasks\"));\n    const allTasks = querySnapshot.docs.map(doc => ({\n      id: doc.id,\n      ...doc.data()\n    }));\n    console.log(allTasks);\n    setTasks(allTasks);\n  };\n  useEffect(() => {\n    // TODO: create getEmployees function and call it here\n    getTasks();\n  }, []);\n  const handleEdit = id => {\n    const [task] = tasks.filter(task => task.id === id);\n    setSelectedTask(task);\n    setIsEditing(true);\n  };\n  const handleDelete = id => {\n    Swal.fire({\n      icon: \"warning\",\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, cancel!\"\n    }).then(result => {\n      if (result.value) {\n        const [task] = tasks.filter(task => task.id === id);\n\n        // TODO delete document\n\n        Swal.fire({\n          icon: \"success\",\n          title: \"Deleted!\",\n          text: `data has been deleted.`,\n          showConfirmButton: false,\n          timer: 1500\n        });\n        const tasksCopy = tasks.filter(task => task.id !== id);\n        setTasks(tasksCopy);\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [!isAdding && !isEditing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        setIsAdding: setIsAdding,\n        setIsAuthenticated: setIsAuthenticated\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        tasks: tasks,\n        handleEdit: handleEdit,\n        handleDelete: handleDelete\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isAdding && /*#__PURE__*/_jsxDEV(Add, {\n      employees: tasks,\n      setEmployees: setTasks,\n      setIsAdding: setIsAdding\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }, this), isEditing && /*#__PURE__*/_jsxDEV(Edit, {\n      employees: tasks,\n      selectedEmployee: selectedTask,\n      setEmployees: setTasks,\n      setIsEditing: setIsEditing\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"UDTOsq/tgytLa7z2joYqvVGMSYs=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","Swal","collection","getDocs","Header","Table","Add","Edit","employeesData","db","jsxDEV","_jsxDEV","Fragment","_Fragment","Dashboard","setIsAuthenticated","_s","tasks","setTasks","selectedTask","setSelectedTask","isAdding","setIsAdding","isEditing","setIsEditing","getTasks","querySnapshot","allTasks","docs","map","doc","id","data","console","log","handleEdit","task","filter","handleDelete","fire","icon","title","text","showCancelButton","confirmButtonText","cancelButtonText","then","result","value","showConfirmButton","timer","tasksCopy","className","children","fileName","_jsxFileName","lineNumber","columnNumber","employees","setEmployees","selectedEmployee","_c","$RefreshReg$"],"sources":["/Users/joshuaolorunnipa/Downloads/React Guide/firestore-react-crud-app-main/src/components/Dashboard/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport { collection, getDocs } from \"firebase/firestore\";\n\nimport Header from \"./Header\";\nimport Table from \"./Table\";\nimport Add from \"./Add\";\nimport Edit from \"./Edit\";\n\nimport { employeesData } from \"../../data\";\nimport { db } from \"../../config/firestore\";\n\nconst Dashboard = ({ setIsAuthenticated }) => {\n  const [tasks, setTasks] = useState([]);\n  const [selectedTask, setSelectedTask] = useState(null);\n  const [isAdding, setIsAdding] = useState(false);\n  const [isEditing, setIsEditing] = useState(false);\n\n  const getTasks = async () => {\n    const querySnapshot = await getDocs(collection(db, \"tasks\"));\n    const allTasks = querySnapshot.docs.map((doc) => ({\n      id: doc.id,\n      ...doc.data(),\n    }));\n    console.log(allTasks);\n    setTasks(allTasks);\n  };\n\n  useEffect(() => {\n    // TODO: create getEmployees function and call it here\n    getTasks();\n  }, []);\n\n  const handleEdit = (id) => {\n    const [task] = tasks.filter((task) => task.id === id);\n\n    setSelectedTask(task);\n    setIsEditing(true);\n  };\n\n  const handleDelete = (id) => {\n    Swal.fire({\n      icon: \"warning\",\n      title: \"Are you sure?\",\n      text: \"You won't be able to revert this!\",\n      showCancelButton: true,\n      confirmButtonText: \"Yes, delete it!\",\n      cancelButtonText: \"No, cancel!\",\n    }).then((result) => {\n      if (result.value) {\n        const [task] = tasks.filter((task) => task.id === id);\n\n        // TODO delete document\n\n        Swal.fire({\n          icon: \"success\",\n          title: \"Deleted!\",\n          text: `data has been deleted.`,\n          showConfirmButton: false,\n          timer: 1500,\n        });\n\n        const tasksCopy = tasks.filter((task) => task.id !== id);\n        setTasks(tasksCopy);\n      }\n    });\n  };\n\n  return (\n    <div className=\"container\">\n      {!isAdding && !isEditing && (\n        <>\n          <Header\n            setIsAdding={setIsAdding}\n            setIsAuthenticated={setIsAuthenticated}\n          />\n          <Table\n            tasks={tasks}\n            handleEdit={handleEdit}\n            handleDelete={handleDelete}\n          />\n        </>\n      )}\n      {isAdding && (\n        <Add\n          employees={tasks}\n          setEmployees={setTasks}\n          setIsAdding={setIsAdding}\n        />\n      )}\n      {isEditing && (\n        <Edit\n          employees={tasks}\n          selectedEmployee={selectedTask}\n          setEmployees={setTasks}\n          setIsEditing={setIsEditing}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}